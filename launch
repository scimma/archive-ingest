#!/bin/bash

## Detect the Docker Compose base command
dc_version="$(docker-compose version 2>/dev/null)"
if [[ $? != 0 ]] ; then
  dc_version="$(docker compose version 2>/dev/null)"
  if [[ $? != 0 ]] ; then
    echo "Please install a supported version of Docker Compose."
    exit 1
  else
    dc_cmd="docker compose"
  fi
else
  dc_cmd="docker-compose"
fi

## Initialize environment config file
if [[ ! -f .env ]]; then
  echo "Environment config file \".env\" missing. Initializing..."
  cp env.tpl .env
  echo "Configure your Hopskotch credentials in \".env\" if desired."
else
  echo "Environment config file \".env\" exists."
fi

# echo "Applying environment config file \".env\"..."
# source .env

# ## Set CUID and CGID
# if [[ "${CUID}x" == "x" ]]; then
#   export CUID=$(id -u)
#   echo "Setting CUID=${CUID}"
# else
#   echo "Using CUID=${CUID}"
# fi
# if [[ "${CGID}x" == "x" ]]; then
#   export CGID=$(id -g)
#   echo "Setting CGID=${CGID}"
# else
#   echo "Using CGID=${CGID}"
# fi

## Ignition
if [[ "$1" == "--build" ]]
then
  echo "Destroying all containers and deleting database volumes..."
  $dc_cmd up --build -d && $dc_cmd ps
  echo
  echo "To follow logs run:"
  echo "  $0 --logs"
elif [[ "$1" == "--logs" ]]
then
  $dc_cmd logs -f
elif [[ "$1" == "--down" ]]
then
  echo "Destroying all containers and wiping database..."
  $dc_cmd down --volumes --remove-orphans 
else
  $dc_cmd pull && $dc_cmd up && $dc_cmd ps
  echo
  echo "To follow logs run:"
  echo "  $0 --logs"
fi
echo "Done."
