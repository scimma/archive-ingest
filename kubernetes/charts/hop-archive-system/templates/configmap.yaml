---
apiVersion: v1
kind: ConfigMap
metadata:
  name: archiver-config
data:
  archive_ingest.toml: |
    [log]
    log-type = "log-tty"
    #filename = "output/hopstream.log"
    level = "DEBUG"

    ###########
    # mongo event store
    ##########
    [mongo-demo]
    mongo-type = "local"
    mongo-ip  = "mongo-db"
    mongo-port = 27017


    ###########
    # database
    ###########

    [mock-db]
    db-type = "mock"

    [local-db]
    db-type = "local"

    [aws-dev-db]
    db-type = "aws"
    db-name = "hopdevel-archive-ingest-db"
    db-secret-name = "hopDevel-archive-ingest-db-password"
    db-aws-region  = "us-west-2"

    [aws-prod-db]
    db-type = "aws"
    db-name = "hopprod-archive-ingest-db"
    db-secret-name = "hopProd-archive-ingest-db-password"
    db-aws-region  = "us-west-2"

    ###########
    # storage
    ###########

    [S3-dev]
    store-type = "S3"
    store-primary-bucket =  "hopdevel-scimma-archive-ingest"
    store-backup-bucket  =  "hopdevel-scimma-archive-ingest-backup"
    store-log-every = 20

    [S3-prod]
    store-type = "S3"
    store-primary-bucket =  "hopprod-scimma-archive-ingest"
    store-backup-bucket  =  "hopprod-scimma-archive-ingest-backup"
    store-log-every = 20

    [local-store]
    store-type = "S3"
    store-primary-bucket =  "hop-messages"
    store-backup-bucket  =  "hop-messages-backup"
    store-endpoint-url = "http://object-store:9000"
    store-region-name = ""
    store-log-every = 20

    [mock-store]
    store-type = "mock"
    store-primary-bucket =  "hopdevel-scimma-housekeeping"
    store-backup-bucket  =  "hopdevel-scimma-housekeeping-backup"
    store-log-every = 1

    ###########
    # hop
    ###########

    [mock-hop]
    hop-type = "mock"
    hop-test-max-message = 100

    [hop-local]
    hop-type              = "hop"
    hop-local-auth        = "/root/.config/hop/auth.toml"
    hop-hostname          = "kafka.scimma.org"
    hop-groupname         = "random"
    hop-port              = 9092
    hop-until-eos         = false
    hop-vetoed-topics     = ["sys.heartbeat", "__consumer_offsets", "sys.heartbeat-cit"]
    hop-test-topic        = "gcn.notice,igwn.gwalert,gcn.circular,hermes.message,hermes.test"
    hop-topic-refresh-interval-seconds = 300 #5 minutes
    hop-test-max-messages = 999999

    [hop-devel-devel]
    # a configuration to use the development hop (not complete)
    hop-type                = "hop"
    hop-hostname            = "dev.hop.scimma.org"
    hop-port                = 9092
    hop-vetoed-topics = ["sys.heartbeat", "__consumer_offsets", "sys.heartbeat-cit"]
    hop-test-max-messages = 1

    [hop-prod-devel]
    # a configuration to use production hop in devleopment context
    hop-type              = "hop"
    hop-hostname          = "kafka.scimma.org"
    hop-groupname         = "archive-ingest-devel"
    hop-aws-secret-name   = "hopDevel-archive-ingest-hop-prod-credentials"
    hop-aws-secret-region = "us-west-2"
    hop-port              = 9092
    hop-until-eos         = false
    hop-vetoed-topics     = ["sys.heartbeat", "__consumer_offsets", "sys.heartbeat-cit"]
    hop-test-topic        = "sys.archive-ingest-test"
    hop-topic-refresh-interval-seconds = 300 #5 minutes
    hop-test-max-messages = 1

    [hop-prod]
    # a configuration for the production instance of the archiver.
    hop-type              = "hop"
    hop-hostname          = "kafka.scimma.org"
    hop-groupname         = "sys.archive-ingest-prod"
    hop-aws-secret-name   = "hopProd-archive-ingest-hop-prod-credentials"
    hop-aws-secret-region = "us-west-2"
    hop-port              = 9092
    hop-until-eos         = false
    hop-vetoed-topics     = ["sys.heartbeat", "__consumer_offsets", "sys.heartbeat-cit"]
    hop-test-topic        = "sys.archive-ingest-test"
    hop-topic-refresh-interval-seconds = 300 #5 minutes
    hop-test-max-messages = 1

    [kcat-prod]
    hop-type   = "kcat"
    hop-hostname   = "kafka.scimma.org"
    hop-groupname  = "hopstream"
    hop-port       = 9092
    hop-test-topic = "sys.archive-ingest-prod"
    hop-aws-secret-name   =  "hopdevel-housekeeping-hop-prod-credentials"
    hop-aws-secret-region =  "us-west-2"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: archive-api-nginx
data:
  default.conf: |
    # Global NGINX performance tuning
    tcp_nopush on;
    tcp_nodelay on;

    server {
        listen 8080;
        server_name _;
        root /usr/share/nginx/html;

        # static files
        location /{{ .Values.archiveApi.ingress.basePath }}/static/ {
            alias /static/;
        }

        # media files
        location /{{ .Values.archiveApi.ingress.basePath }}/media/ {
          alias /media/;
        }

        # Kubernetes health check (fixed response)
        location = /healthz {
          access_log off;
          return 200 "Healthy!\n";
        }

        # django application
        location /{{ .Values.archiveApi.ingress.basePath }} {
            proxy_pass http://127.0.0.1:8000/{{ .Values.archiveApi.ingress.basePath }};
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # Clients can send any content up to 1024 MiB in size. NGINX will
            # not buffer any content, but instead pass it straight through to
            # the Gunicorn Python backend to handle.
            proxy_request_buffering off;
            client_max_body_size 1024m;
        }
    }
